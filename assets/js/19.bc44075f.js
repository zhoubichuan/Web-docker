(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{358:function(s,a,t){"use strict";t.r(a);var n=t(9),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"三-使用-gitlab"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-使用-gitlab"}},[s._v("#")]),s._v(" 三.使用 Gitlab")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("前言")]),s._v(" "),t("p",[s._v("Gitlab 这里主要拿来作为代码仓库案例使用，作用类似 github、gitee")])]),s._v(" "),t("h2",{attrs:{id:"_1-安装过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装过程"}},[s._v("#")]),s._v(" 1.安装过程")]),s._v(" "),t("h3",{attrs:{id:"_1-1-获取-gitlab-镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-获取-gitlab-镜像"}},[s._v("#")]),s._v(" 1.1 获取 Gitlab 镜像")]),s._v(" "),t("p",[s._v("这里我们拉取最新的 gitlab-ce 镜像")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull gitlab/gitlab-ce\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_1-2-获取-gitlab-容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-获取-gitlab-容器"}},[s._v("#")]),s._v(" 1.2 获取 Gitlab 容器")]),s._v(" "),t("p",[s._v("我们使用 docker run 命令启动一个新的 Gitlab 容器")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d  -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8443")]),s._v(":443 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8090")]),s._v(":80 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8022")]),s._v(":22 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--name gitlab "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--restart always "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v /home/gitlab/config:/etc/gitlab "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v /home/gitlab/logs:/var/log/gitlab "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n-v /home/gitlab/data:/var/opt/gitlab "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\ngitlab/gitlab-ce\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("h3",{attrs:{id:"_1-3-完成安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-完成安装"}},[s._v("#")]),s._v(" 1.3 完成安装")]),s._v(" "),t("ul",[t("li",[s._v("关闭防火墙8090端口")]),s._v(" "),t("li",[s._v("打开页面"),t("a",{attrs:{href:"http://81.71.127.69:8090",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://81.71.127.69:8090"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"_2-其他问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-其他问题"}},[s._v("#")]),s._v(" 2.其他问题")]),s._v(" "),t("p",[s._v("--restart: 当 Docker 重启时，容器自动启动，否则就需要使用 docker restart 启动\ngitlab 端口映射规则：最好内外端口映射一致，gitlab 会根据你的配置文件调整服务端口。如外部访问 8899，内外都配置 8899\n一般 Gitlab 有三个端口要使用：ssh，https，主服务地址。\nssh 默认是 22，这里我改为了 333，下方配置文件内也要改为 333\n然后我们在防火墙添加 333 和 8899 端口的放行，并重载防火墙")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("firewall-cmd --zone"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("public --add-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("333")]),s._v("/tcp --permanent\nfirewall-cmd --zone"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("public --add-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8899")]),s._v("/tcp --permanent\nsystemctl reload firewalld\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_1-修改-gitlab-配置文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-修改-gitlab-配置文件"}},[s._v("#")]),s._v(" 1.修改 Gitlab 配置文件")]),s._v(" "),t("p",[s._v("容器启动后，我们需要修改 Gitlab 配置文件，修改 Gitlab 主服务地址和 SSH 服务地址")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vi")]),s._v(" /home/gitlab/config/gitlab.rb\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("在文件内增加三条配置：\n• external_url: 外部服务访问地址\n• gitlab_rails['gitlab_ssh_host']：SSH 代码拉取地址\n• gitlab_rails['gitlab_shell_ssh_port']：SSH 代码拉取端口")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[s._v("external_url "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'http://外部访问域名/地址:端口'")]),s._v("\ngitlab_rails"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gitlab_ssh_host'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'SSH外部访问域名/地址'")]),s._v("\ngitlab_rails"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'gitlab_shell_ssh_port'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" SSH端口\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h4",{attrs:{id:"_3-1-如果修改-ssh-端口"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-如果修改-ssh-端口"}},[s._v("#")]),s._v(" 3.1 如果修改 SSH 端口")]),s._v(" "),t("p",[s._v("SSH 默认的端口是 22 。这里内外分开，将 Gitlab 容器内 SSH 端口改为了 333 。\n先进入 Gitlab 容器，直接编辑 /assets/sshd_config 和 /etc/ssh/sshd_config 这两个文件即可。修改最上方的 Port 字段。")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it gitlab /bin/bash\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /assets/sshd_config\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/ssh/sshd_config\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("接着重启 Gitlab")]),s._v(" "),t("div",{staticClass:"language-bash line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" restart gitlab\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_2-启动-gitlab"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-启动-gitlab"}},[s._v("#")]),s._v(" 2.启动 Gitlab")]),s._v(" "),t("p",[s._v("访问 宿主机:端口 ，查看 Gitlab 启动情况，如果显示 502 ，则代表正在启动中。第一次启动时间可能会有些长。如显示以下界面，代表启动成功。")]),s._v(" "),t("p",[s._v("修改密码后，默认管理员是 root ，登录进入即可")])])}),[],!1,null,null,null);a.default=e.exports}}]);